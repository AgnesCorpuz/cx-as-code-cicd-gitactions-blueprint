name: Genesys Cloud - CI/CD Example
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  Deploy-Email-flow:
    runs-on: ubuntu-latest
    env:
      GENESYSCLOUD_OAUTHCLIENT_ID: ${{ secrets.GENESYSCLOUD_OAUTHCLIENT_ID_DEV }}
      GENESYSCLOUD_OAUTHCLIENT_SECRET: ${{ secrets.GENESYSCLOUD_OAUTHCLIENT_SECRET_DEV }}
      GENESYSCLOUD_API_REGION: "https://api.usw2.pure.cloud"
      GENESYSCLOUD_REGION: "us-west-2"
      GENESYSCLOUD_ARCHY_REGION: "usw2.pure.cloud"
      GENESYSCLOUD_EMAIL_DOMAIN: "devengagedev"
      GENESYSCLOUD_EMAIL_DOMAIN_REGION: "pure.cloud"

    steps:
      #Checks out the code out of the source control system and begins setup.
      - uses: actions/checkout@v2
      - name: Checkouts Source Code
        run: ls -al $GITHUB_WORKSPACE

      #Install archy
      - name: Download and install archy
        run: |
          mkdir archy
          cd archy
          wget -q https://sdk-cdn.mypurecloud.com/archy/latest/archy-linux.zip
          unzip archy-linux.zip
          . archy version                              #Need this command because archy replaces the path in the the file the first time it is run
          export PATH=$PATH:$GITHUB_WORKSPACE/archy
          cd ..
          pwd
          archy version

      #Install CLI
      - name: Download and install the Genesys Cloud CLI
        run: |
          curl -s https://sdk-cdn.mypurecloud.com/external/go-cli/linux/dl/install.sh | sudo bash
          gc version

      #Install Terraform
      - name: Download and install terraform
        run: |
          wget https://releases.hashicorp.com/terraform/1.0.6/terraform_1.0.6_linux_amd64.zip
          unzip terraform_1.0.6_linux_amd64.zip
          mv terraform /usr/local/bin
          terraform version

      #Init Terraform and run it
      # - name: Initialize terraform and run it
      #   run: |
      #     env | grep GENESYS
      #     cd dev
      #     terraform init
      #     terraform apply --auto-approve
      #     cd ..

      #Run Archy to import a flow
      - name: Run Archy to import flow
        run: |
          export PATH=$PATH:$GITHUB_WORKSPACE/archy
          archy publish --forceUnlock --file=$GITHUB_WORKSPACE/modules/email_flow/scripts/EmailComprehendFlow.yaml --clientId $GENESYSCLOUD_OAUTHCLIENT_ID --clientSecret $GENESYSCLOUD_OAUTHCLIENT_SECRET --location $GENESYSCLOUD_ARCHY_REGION  --overwriteResultsFile --resultsFile $GITHUB_WORKSPACE/modules/email_flow/scripts/output/results.json
          cat $GITHUB_WORKSPACE/modules/email_flow/scripts/output/results.json
          export GENESYSCLOUD_FLOW_ID=$(cat $GITHUB_WORKSPACE/modules/email_flow/scripts/output/results.json | jq -r '.output.flowInfo.id')
          env | grep GENESYSCLOUD_FLOW_ID

      #Use the CLI to create the email domain route
      - name: Run CLI to create email domain route
        run: |
          echo "{'pattern': 'support', 'from_name':'Financial Services Support', 'from_email': 'support@${GENESYSCLOUD_EMAIL_DOMAIN}.${GENESYSCLOUD_EMAIL_DOMAIN_REGION}', 'flow': {'id': '${GENESYSCLOUD_FLOW_ID}'}}" 
          #echo "{'pattern': 'support', 'from_name':'Financial Services Support', 'from_email': 'support@${GENESYSCLOUD_EMAIL_DOMAIN}.${GENESYSCLOUD_EMAIL_DOMAIN_REGION}', 'flow': {'id': '${GENESYSCLOUD_FLOW_ID}'}}" | jq . > /tmp/email_domain.json
          #cat /tmp/email_domain.json
          #gc routing email domains routes create $GENESYSCLOUD_EMAIL_DOMAIN

      - name: Print Job Status
        run: echo "üçè This job's status is ${{ job.status }}."
      ## - name: Setup tmate session
      #   uses:
      #     mxschmitt/action-tmate@v3
