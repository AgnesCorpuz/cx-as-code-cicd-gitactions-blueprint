name: Genesys Cloud Email Non-Prod Deploy
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  deploy-email-flow-dev:
    runs-on: ubuntu-latest
    env:
      ## Used by archy and the python scripts
      GENESYSCLOUD_OAUTHCLIENT_ID: ${{ secrets.GENESYSCLOUD_OAUTHCLIENT_ID_DEV }}
      GENESYSCLOUD_OAUTHCLIENT_SECRET: ${{ secrets.GENESYSCLOUD_OAUTHCLIENT_SECRET_DEV }}
      GENESYSCLOUD_API_REGION: "https://api.usw2.pure.cloud"
      GENESYSCLOUD_REGION: "us-west-2"
      GENESYSCLOUD_ARCHY_REGION: "usw2.pure.cloud"
      GENESYSCLOUD_EMAIL_DOMAIN: "devengagedev"
      GENESYSCLOUD_EMAIL_DOMAIN_REGION: "pure.cloud"
    steps:
      #Checks out the code out of the source control system and begins setup.
      - uses: actions/checkout@v2
      - uses: ./.github/actions/genesys-cloud-dev-tools
      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      #Init Terraform and run it
      - name: Initialize terraform and run it
        run: |
          cd blueprint/genesys-cloud-cx-as-code
          terraform init 
          terraform apply --auto-approve
          cd ../..

      #Run Archy to import a flow
      - name: Run Archy to import flow
        run: |
          export PATH=$PATH:$GITHUB_WORKSPACE/archy
          archy publish --forceUnlock --file=$GITHUB_WORKSPACE/genesys-cloud-architect-flows/EmailComprehendFlow.yaml --clientId $GENESYSCLOUD_OAUTHCLIENT_ID --clientSecret $GENESYSCLOUD_OAUTHCLIENT_SECRET --location $GENESYSCLOUD_ARCHY_REGION  --overwriteResultsFile --resultsFile $GITHUB_WORKSPACE/output/results.json
          cat $GITHUB_WORKSPACE/output/results.json

      #Use the Python to create the email domain route
      - name: Add email domain route
        run: |
          export GENESYSCLOUD_FLOW_ID=$(cat $GITHUB_WORKSPACE/output/results.json | jq -r '.output.flowInfo.id')
          python $GITHUB_WORKSPACE/scripts/create_email_domain.py
  execute-platform-tests:
    runs-on: ubuntu-latest
    needs: deploy-email-flow-dev
    env:
      GENESYSCLOUD_OAUTHCLIENT_ID: ${{ secrets.GENESYSCLOUD_OAUTHCLIENT_ID_DEV }}
      GENESYSCLOUD_OAUTHCLIENT_SECRET: ${{ secrets.GENESYSCLOUD_OAUTHCLIENT_SECRET_DEV }}
      GENESYSCLOUD_REGION: "us-west-2"
      GENESYSCLOUD_API_REGION: "https://api.usw2.pure.cloud"
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/genesys-cloud-dev-tools
      - name: Platform tests
        run: python scripts/platform_tests.py
  deploy-email-flow-test:
    runs-on: ubuntu-latest
    needs: execute-platform-tests
    env:
      ## Used by archy and the python scripts
      GENESYSCLOUD_OAUTHCLIENT_ID: ${{ secrets.GENESYSCLOUD_OAUTHCLIENT_ID_TEST }}
      GENESYSCLOUD_OAUTHCLIENT_SECRET: ${{ secrets.GENESYSCLOUD_OAUTHCLIENT_SECRET_TEST }}
      GENESYSCLOUD_API_REGION: "https://api.usw2.pure.cloud"
      GENESYSCLOUD_REGION: "us-west-2"
      GENESYSCLOUD_ARCHY_REGION: "usw2.pure.cloud"
      GENESYSCLOUD_EMAIL_DOMAIN: "devengagetest"
      GENESYSCLOUD_EMAIL_DOMAIN_REGION: "pure.cloud"
      TF_WORKSPACE: "genesys_email_test"
    steps:
      #Checks out the code out of the source control system and begins setup.
      - uses: actions/checkout@v2
      - uses: ./.github/actions/genesys-cloud-dev-tools
      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      #Init Terraform and run it
      - name: Initialize terraform and run it
        run: |
          cd genesys-cloud-cx-as-code
          terraform init
          terraform apply --auto-approve
          cd ..

      #Run Archy to import a flow
      - name: Run Archy to import flow
        run: |
          export PATH=$PATH:$GITHUB_WORKSPACE/archy
          archy publish --forceUnlock --file=$GITHUB_WORKSPACE/genesys-cloud-architect-flows/EmailComprehendFlow.yaml --clientId $GENESYSCLOUD_OAUTHCLIENT_ID --clientSecret $GENESYSCLOUD_OAUTHCLIENT_SECRET --location $GENESYSCLOUD_ARCHY_REGION  --overwriteResultsFile --resultsFile $GITHUB_WORKSPACE/output/results.json
          cat $GITHUB_WORKSPACE/output/results.json

      #Use the CLI to create the email domain route
      - name: Add email domain route
        run: |
          export GENESYSCLOUD_FLOW_ID=$(cat $GITHUB_WORKSPACE/output/results.json | jq -r '.output.flowInfo.id')
          python $GITHUB_WORKSPACE/scripts/create_email_domain.py
